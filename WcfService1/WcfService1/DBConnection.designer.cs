#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfService1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="IntegracionDeServicios")]
	public partial class DBConnectionDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertServ_Benef(Serv_Benef instance);
    partial void UpdateServ_Benef(Serv_Benef instance);
    partial void DeleteServ_Benef(Serv_Benef instance);
    partial void InsertServicio(Servicio instance);
    partial void UpdateServicio(Servicio instance);
    partial void DeleteServicio(Servicio instance);
    #endregion
		
		public DBConnectionDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["IntegracionDeServiciosConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnectionDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnectionDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnectionDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnectionDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Beneficiario> Beneficiarios
		{
			get
			{
				return this.GetTable<Beneficiario>();
			}
		}
		
		public System.Data.Linq.Table<Serv_Benef> Serv_Benefs
		{
			get
			{
				return this.GetTable<Serv_Benef>();
			}
		}
		
		public System.Data.Linq.Table<Servicio> Servicios
		{
			get
			{
				return this.GetTable<Servicio>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Beneficiario")]
	public partial class Beneficiario
	{
		
		private int _id_Key;
		
		private string _SSN1;
		
		private string _SSN2;
		
		private string _SSN3;
		
		private string _Nombre;
		
		private string _SegundoNombre;
		
		private string _ApellidoPaterno;
		
		private string _ApellidoMaterno;
		
		private System.Nullable<System.DateTime> _FechaDeNac;
		
		private string _Sexo;
		
		private int _MunicipioResidencia;
		
		private bool _Activo;
		
		public Beneficiario()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Key", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id_Key
		{
			get
			{
				return this._id_Key;
			}
			set
			{
				if ((this._id_Key != value))
				{
					this._id_Key = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSN1", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string SSN1
		{
			get
			{
				return this._SSN1;
			}
			set
			{
				if ((this._SSN1 != value))
				{
					this._SSN1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSN2", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string SSN2
		{
			get
			{
				return this._SSN2;
			}
			set
			{
				if ((this._SSN2 != value))
				{
					this._SSN2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSN3", DbType="NChar(4) NOT NULL", CanBeNull=false)]
		public string SSN3
		{
			get
			{
				return this._SSN3;
			}
			set
			{
				if ((this._SSN3 != value))
				{
					this._SSN3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(20)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegundoNombre", DbType="NVarChar(20)")]
		public string SegundoNombre
		{
			get
			{
				return this._SegundoNombre;
			}
			set
			{
				if ((this._SegundoNombre != value))
				{
					this._SegundoNombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoPaterno", DbType="NVarChar(20)")]
		public string ApellidoPaterno
		{
			get
			{
				return this._ApellidoPaterno;
			}
			set
			{
				if ((this._ApellidoPaterno != value))
				{
					this._ApellidoPaterno = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoMaterno", DbType="NVarChar(20)")]
		public string ApellidoMaterno
		{
			get
			{
				return this._ApellidoMaterno;
			}
			set
			{
				if ((this._ApellidoMaterno != value))
				{
					this._ApellidoMaterno = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaDeNac", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaDeNac
		{
			get
			{
				return this._FechaDeNac;
			}
			set
			{
				if ((this._FechaDeNac != value))
				{
					this._FechaDeNac = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="NVarChar(1)")]
		public string Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this._Sexo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MunicipioResidencia", DbType="Int NOT NULL")]
		public int MunicipioResidencia
		{
			get
			{
				return this._MunicipioResidencia;
			}
			set
			{
				if ((this._MunicipioResidencia != value))
				{
					this._MunicipioResidencia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit NOT NULL")]
		public bool Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this._Activo = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Serv_Benef")]
	public partial class Serv_Benef : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Serv;
		
		private int _id_key;
		
		private System.Nullable<bool> _Activo;
		
		private System.Nullable<System.DateTime> _FechaServ;
		
		private EntityRef<Servicio> _Servicio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ServChanging(int value);
    partial void OnId_ServChanged();
    partial void Onid_keyChanging(int value);
    partial void Onid_keyChanged();
    partial void OnActivoChanging(System.Nullable<bool> value);
    partial void OnActivoChanged();
    partial void OnFechaServChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaServChanged();
    #endregion
		
		public Serv_Benef()
		{
			this._Servicio = default(EntityRef<Servicio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Serv", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Serv
		{
			get
			{
				return this._Id_Serv;
			}
			set
			{
				if ((this._Id_Serv != value))
				{
					if (this._Servicio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ServChanging(value);
					this.SendPropertyChanging();
					this._Id_Serv = value;
					this.SendPropertyChanged("Id_Serv");
					this.OnId_ServChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_key", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_key
		{
			get
			{
				return this._id_key;
			}
			set
			{
				if ((this._id_key != value))
				{
					this.Onid_keyChanging(value);
					this.SendPropertyChanging();
					this._id_key = value;
					this.SendPropertyChanged("id_key");
					this.Onid_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit")]
		public System.Nullable<bool> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaServ", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaServ
		{
			get
			{
				return this._FechaServ;
			}
			set
			{
				if ((this._FechaServ != value))
				{
					this.OnFechaServChanging(value);
					this.SendPropertyChanging();
					this._FechaServ = value;
					this.SendPropertyChanged("FechaServ");
					this.OnFechaServChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Servicio_Serv_Benef", Storage="_Servicio", ThisKey="Id_Serv", OtherKey="Id_Serv", IsForeignKey=true)]
		public Servicio Servicio
		{
			get
			{
				return this._Servicio.Entity;
			}
			set
			{
				Servicio previousValue = this._Servicio.Entity;
				if (((previousValue != value) 
							|| (this._Servicio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Servicio.Entity = null;
						previousValue.Serv_Benefs.Remove(this);
					}
					this._Servicio.Entity = value;
					if ((value != null))
					{
						value.Serv_Benefs.Add(this);
						this._Id_Serv = value.Id_Serv;
					}
					else
					{
						this._Id_Serv = default(int);
					}
					this.SendPropertyChanged("Servicio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Servicio")]
	public partial class Servicio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Serv;
		
		private string _Servicio1;
		
		private string _CodServ;
		
		private bool _Activo;
		
		private EntitySet<Serv_Benef> _Serv_Benefs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ServChanging(int value);
    partial void OnId_ServChanged();
    partial void OnServicio1Changing(string value);
    partial void OnServicio1Changed();
    partial void OnCodServChanging(string value);
    partial void OnCodServChanged();
    partial void OnActivoChanging(bool value);
    partial void OnActivoChanged();
    #endregion
		
		public Servicio()
		{
			this._Serv_Benefs = new EntitySet<Serv_Benef>(new Action<Serv_Benef>(this.attach_Serv_Benefs), new Action<Serv_Benef>(this.detach_Serv_Benefs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Serv", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Serv
		{
			get
			{
				return this._Id_Serv;
			}
			set
			{
				if ((this._Id_Serv != value))
				{
					this.OnId_ServChanging(value);
					this.SendPropertyChanging();
					this._Id_Serv = value;
					this.SendPropertyChanged("Id_Serv");
					this.OnId_ServChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Servicio", Storage="_Servicio1", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Servicio1
		{
			get
			{
				return this._Servicio1;
			}
			set
			{
				if ((this._Servicio1 != value))
				{
					this.OnServicio1Changing(value);
					this.SendPropertyChanging();
					this._Servicio1 = value;
					this.SendPropertyChanged("Servicio1");
					this.OnServicio1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodServ", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string CodServ
		{
			get
			{
				return this._CodServ;
			}
			set
			{
				if ((this._CodServ != value))
				{
					this.OnCodServChanging(value);
					this.SendPropertyChanging();
					this._CodServ = value;
					this.SendPropertyChanged("CodServ");
					this.OnCodServChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit NOT NULL")]
		public bool Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Servicio_Serv_Benef", Storage="_Serv_Benefs", ThisKey="Id_Serv", OtherKey="Id_Serv")]
		public EntitySet<Serv_Benef> Serv_Benefs
		{
			get
			{
				return this._Serv_Benefs;
			}
			set
			{
				this._Serv_Benefs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Serv_Benefs(Serv_Benef entity)
		{
			this.SendPropertyChanging();
			entity.Servicio = this;
		}
		
		private void detach_Serv_Benefs(Serv_Benef entity)
		{
			this.SendPropertyChanging();
			entity.Servicio = null;
		}
	}
}
#pragma warning restore 1591
